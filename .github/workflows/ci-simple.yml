name: Simple CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: "18"

jobs:
  # Basic validation and testing
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Check TypeScript
        run: npx tsc --noEmit
        
      - name: Run unit tests
        run: npm test -- --coverage --watchAll=false --passWithNoTests
        env:
          CI: true
          
      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: coverage/

  # Build validation
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          
      - name: Install dependencies
        run: npm ci
        
      - name: Create environment file
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.local
          
      - name: Build application
        run: npm run build
        
      - name: Export static files
        run: npm run export
        
      - name: Verify build output
        run: |
          if [ ! -f out/index.html ]; then
            echo "❌ Build failed: out/index.html not found"
            exit 1
          fi
          echo "✅ Build successful"
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: out/
          retention-days: 7

  # Security audit (simplified)
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

  # Summary
  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: always()
    
    steps:
      - name: Generate summary
        run: |
          echo "## 🧪 CI Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.test.result }}" = "success" ]; then
            echo "✅ **Tests & Linting:** Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Tests & Linting:** Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.build.result }}" = "success" ]; then
            echo "✅ **Build:** Successful" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build:** Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.security.result }}" = "success" ]; then
            echo "✅ **Security:** No critical issues" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Security:** Issues found (check logs)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY