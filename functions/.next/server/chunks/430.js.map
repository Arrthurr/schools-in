{"version":3,"file":"430.js","mappings":"6eAiBO,IAAAA,EAAkBC,SAAAC,SAAc,CAACC,EAAAC,IAAkB,0FCCnD,eAAAC,IACP,IAEA,MAAAC,CADA,MAA6BC,EAAAC,QAAE,CAAAC,QAAA,gBAA2BC,SAAA,QAAkB,EAC5EC,IAAA,EACA,CACA,MAAAC,EAAA,CACQC,EAAAC,CAAI,CAAAC,KAAA,8BAAoCH,EAAE,EAClD,CACA,IAEA,MAAAN,CADA,MAA6B,GAAAU,EAAAC,CAAA,EAAS,+BACtCC,MAAA,CAAAP,IAAA,EACA,CACA,MAAAC,EAAA,CACQC,EAAAC,CAAI,CAAAC,KAAA,8BAAoCH,EAAE,EAClD,CAEA","sources":["webpack://schools-in/./node_modules/@sentry/nextjs/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js","webpack://schools-in/./node_modules/@sentry/nextjs/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-bsd.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as child_process from 'child_process';\nimport * as util from 'util';\nexport const execAsync = util.promisify(child_process.exec);\n//# sourceMappingURL=execAsync.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { promises as fs } from 'fs';\nimport { execAsync } from './execAsync';\nimport { diag } from '@opentelemetry/api';\nexport async function getMachineId() {\n    try {\n        const result = await fs.readFile('/etc/hostid', { encoding: 'utf8' });\n        return result.trim();\n    }\n    catch (e) {\n        diag.debug(`error reading machine id: ${e}`);\n    }\n    try {\n        const result = await execAsync('kenv -q smbios.system.uuid');\n        return result.stdout.trim();\n    }\n    catch (e) {\n        diag.debug(`error reading machine id: ${e}`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-bsd.js.map"],"names":["execAsync","util__WEBPACK_IMPORTED_MODULE_1__","promisify","child_process__WEBPACK_IMPORTED_MODULE_0__","exec","getMachineId","result","fs__WEBPACK_IMPORTED_MODULE_0__","promises","readFile","encoding","trim","e","_opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__","K","debug","_execAsync__WEBPACK_IMPORTED_MODULE_2__","N","stdout"],"sourceRoot":""}