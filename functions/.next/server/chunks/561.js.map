{"version":3,"file":"561.js","mappings":"6eAiBO,IAAAA,EAAkBC,SAAAC,SAAc,CAACC,EAAAC,IAAkB,0FCCnD,eAAAC,IAEP,IAAAC,EAAA,6BACoB,UAAZC,EAAAC,IAAY,EAAe,2BAAAD,EAAAE,GAAuC,EAC1EH,CAAAA,EAAA,mCAAAA,CAAA,EAEA,IAEA,IAAAI,EAAAC,CADA,MAA6B,GAAAC,EAAAC,CAAA,EAAS,GAAIP,8EAAgB,GAC1DQ,MAAA,CAAAC,KAAA,WACA,GAAAL,IAAAA,EAAAM,MAAA,CACA,OAAAN,CAAA,IAAAO,IAAA,EAEA,CACA,MAAAC,EAAA,CACQC,EAAAC,CAAI,CAAAC,KAAA,8BAAoCH,EAAE,EAClD,CAEA","sources":["webpack://schools-in/./node_modules/@sentry/nextjs/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js","webpack://schools-in/./node_modules/@sentry/nextjs/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-win.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as child_process from 'child_process';\nimport * as util from 'util';\nexport const execAsync = util.promisify(child_process.exec);\n//# sourceMappingURL=execAsync.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as process from 'process';\nimport { execAsync } from './execAsync';\nimport { diag } from '@opentelemetry/api';\nexport async function getMachineId() {\n    const args = 'QUERY HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Cryptography /v MachineGuid';\n    let command = '%windir%\\\\System32\\\\REG.exe';\n    if (process.arch === 'ia32' && 'PROCESSOR_ARCHITEW6432' in process.env) {\n        command = '%windir%\\\\sysnative\\\\cmd.exe /c ' + command;\n    }\n    try {\n        const result = await execAsync(`${command} ${args}`);\n        const parts = result.stdout.split('REG_SZ');\n        if (parts.length === 2) {\n            return parts[1].trim();\n        }\n    }\n    catch (e) {\n        diag.debug(`error reading machine id: ${e}`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-win.js.map"],"names":["execAsync","util__WEBPACK_IMPORTED_MODULE_1__","promisify","child_process__WEBPACK_IMPORTED_MODULE_0__","exec","getMachineId","command","process__WEBPACK_IMPORTED_MODULE_0__","arch","env","parts","result","_execAsync__WEBPACK_IMPORTED_MODULE_1__","N","stdout","split","length","trim","e","_opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__","K","debug"],"sourceRoot":""}