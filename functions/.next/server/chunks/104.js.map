{"version":3,"file":"104.js","mappings":"6eAiBO,IAAAA,EAAkBC,SAAAC,SAAc,CAACC,EAAAC,IAAkB,+ECAnD,eAAAC,IACP,IAEA,IAAAC,EAAAC,CADA,MAA6B,GAAAC,EAAAC,CAAA,EAAS,2CACtCC,MAAA,CACAC,KAAA,OACAC,IAAA,CAAAC,GAAAA,EAAAC,QAAA,oBACA,IAAAR,EACA,OAEA,IAAAS,EAAAT,EAAAK,KAAA,UACA,GAAAI,IAAAA,EAAAC,MAAA,CACA,OAAAD,CAAA,IAAAE,KAAA,MAEA,CACA,MAAAC,EAAA,CACQC,EAAAC,CAAI,CAAAC,KAAA,8BAAoCH,EAAE,EAClD,CAEA","sources":["webpack://schools-in/./node_modules/@sentry/nextjs/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js","webpack://schools-in/./node_modules/@sentry/nextjs/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-darwin.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as child_process from 'child_process';\nimport * as util from 'util';\nexport const execAsync = util.promisify(child_process.exec);\n//# sourceMappingURL=execAsync.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { execAsync } from './execAsync';\nimport { diag } from '@opentelemetry/api';\nexport async function getMachineId() {\n    try {\n        const result = await execAsync('ioreg -rd1 -c \"IOPlatformExpertDevice\"');\n        const idLine = result.stdout\n            .split('\\n')\n            .find(line => line.includes('IOPlatformUUID'));\n        if (!idLine) {\n            return undefined;\n        }\n        const parts = idLine.split('\" = \"');\n        if (parts.length === 2) {\n            return parts[1].slice(0, -1);\n        }\n    }\n    catch (e) {\n        diag.debug(`error reading machine id: ${e}`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-darwin.js.map"],"names":["execAsync","util__WEBPACK_IMPORTED_MODULE_1__","promisify","child_process__WEBPACK_IMPORTED_MODULE_0__","exec","getMachineId","idLine","result","_execAsync__WEBPACK_IMPORTED_MODULE_0__","N","stdout","split","find","line","includes","parts","length","slice","e","_opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__","K","debug"],"sourceRoot":""}