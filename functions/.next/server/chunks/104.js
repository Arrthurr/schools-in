try{!function(){const e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},t=(new e.Error).stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="bac8745d-34b5-43c7-aeff-7bb80362b245",e._sentryDebugIdIdentifier="sentry-dbid-bac8745d-34b5-43c7-aeff-7bb80362b245")}()}catch(e){}"use strict";exports.id=104,exports.ids=[104],exports.modules={2962:(e,t,r)=>{r.d(t,{N:()=>i});const d=r(61282);const i=r(21764).promisify(d.exec)},82104:(e,t,r)=>{r.r(t),r.d(t,{getMachineId:()=>n});const d=r(2962),i=r(98293);async function n(){try{const e=(await (0,d.N)('ioreg -rd1 -c "IOPlatformExpertDevice"')).stdout.split("\n").find(e=>e.includes("IOPlatformUUID"));if(!e)return;const t=e.split('" = "');if(2===t.length)return t[1].slice(0,-1)}catch(e){i.K.debug(`error reading machine id: ${e}`)}}}};
//# sourceMappingURL=104.js.map